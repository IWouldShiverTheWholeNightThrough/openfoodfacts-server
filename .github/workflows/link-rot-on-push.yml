# Runs a link check on modified markdown and HTML content files on push
name: Link Rot on Push
on:
  push:
    paths:
      - '**/*.md'
      - 'html/**/*.html'
      - 'templates/**/*.html'
  pull_request:
    # Also check PRs to catch issues before merge
    paths:
      - '**/*.md'
      - 'html/**/*.html'
      - 'templates/**/*.html'

jobs:
  link-rot-changed:
    concurrency:
      group: link-rot-on-push-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history to compare with base

      - name: Get modified files
        id: get_files
        run: |
          # Get the base commit for comparison
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            # For push events, compare with previous commit
            BASE_SHA="${{ github.event.before }}"
            # Handle edge case of first commit
            if [ "$BASE_SHA" = "0000000000000000000000000000000000000000" ]; then
              BASE_SHA="HEAD~1"
            fi
          fi
          
          echo "Comparing against base: $BASE_SHA"
          
          # Get list of changed files that match our criteria
          changed_files=$(git diff --name-only "$BASE_SHA" HEAD | grep -E '\.(md|html)$' | head -20)
          
          if [ -z "$changed_files" ]; then
            echo "No markdown or HTML files were modified"
            echo "files=" >> $GITHUB_OUTPUT
          else
            echo "Changed files:"
            echo "$changed_files"
            # Convert to space-separated list for lychee
            file_list=$(echo "$changed_files" | tr '\n' ' ' | sed 's/ $//')
            echo "files=$file_list" >> $GITHUB_OUTPUT
          fi

      - name: Run link check
        if: steps.get_files.outputs.files != ''
        uses: lycheeverse/lychee-action@v2.4.1
        id: lychee
        with:
          args: --verbose --no-progress --exclude-loopback --exclude-private --exclude-mail ${{ steps.get_files.outputs.files }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on PR with results
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read lychee results
            let reportContent = '';
            try {
              reportContent = fs.readFileSync('lychee/out.md', 'utf8');
            } catch (error) {
              reportContent = 'Link check failed but no detailed report available.';
            }
            
            const comment = `## üîó Link Rot Check Results
            
            ‚ùå **Link check failed** - broken links detected in your changes.
            
            <details>
            <summary>Click to see detailed report</summary>
            
            \`\`\`
            ${reportContent}
            \`\`\`
            </details>
            
            Please fix the broken links before merging.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
